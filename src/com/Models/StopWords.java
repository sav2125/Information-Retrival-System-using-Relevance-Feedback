package com.Models;

import java.util.ArrayList;
import java.util.HashSet;
import java.util.Iterator;

/**
 * Created by Archie on 9/29/2015.
 */
public class StopWords {
    public ArrayList<String> RemoveWords(ArrayList<String> str) {
        //HashMap<String, Integer> h = new HashMap<>();
        HashSet hs = new HashSet();
        hs.add("");
        hs.add("a");
        hs.add("able");
        hs.add("about");
        hs.add("above");
        hs.add("according");
        hs.add("accordingly");
        hs.add("across");
        hs.add("actually");
        hs.add("after");
        hs.add("afterwards");
        hs.add("again");
        hs.add("against");
        hs.add("all");
        hs.add("allow");
        hs.add("allows");
        hs.add("almost");
        hs.add("alone");
        hs.add("along");
        hs.add("already");
        hs.add("also");
        hs.add("although");
        hs.add("always");
        hs.add("am");
        hs.add("among");
        hs.add("amongst");
        hs.add("an");
        hs.add("and");
        hs.add("another");
        hs.add("any");
        hs.add("anybody");
        hs.add("anyhow");
        hs.add("anyone");
        hs.add("anything");
        hs.add("anyway");
        hs.add("anyways");
        hs.add("anywhere");
        hs.add("apart");
        hs.add("appear");
        hs.add("appreciate");
        hs.add("appropriate");
        hs.add("are");
        hs.add("around");
        hs.add("as");
        hs.add("aside");
        hs.add("ask");
        hs.add("asking");
        hs.add("associated");
        hs.add("at");
        hs.add("available");
        hs.add("away");
        hs.add("awfully");
        hs.add("b");
        hs.add("be");
        hs.add("became");
        hs.add("because");
        hs.add("become");
        hs.add("becomes");
        hs.add("becoming");
        hs.add("been");
        hs.add("before");
        hs.add("beforehand");
        hs.add("behind");
        hs.add("being");
        hs.add("believe");
        hs.add("below");
        hs.add("beside");
        hs.add("besides");
        hs.add("best");
        hs.add("better");
        hs.add("between");
        hs.add("beyond");
        hs.add("both");
        hs.add("brief");
        hs.add("but");
        hs.add("by");
        hs.add("c");
        hs.add("came");
        hs.add("can");
        hs.add("cannot");
        hs.add("cant");
        hs.add("cause");
        hs.add("causes");
        hs.add("certain");
        hs.add("certainly");
        hs.add("changes");
        hs.add("clearly");
        hs.add("co");
        hs.add("com");
        hs.add("come");
        hs.add("comes");
        hs.add("concerning");
        hs.add("consequently");
        hs.add("consider");
        hs.add("considering");
        hs.add("contain");
        hs.add("containing");
        hs.add("contains");
        hs.add("corresponding");
        hs.add("could");
        hs.add("course");
        hs.add("currently");
        hs.add("d");
        hs.add("definitely");
        hs.add("described");
        hs.add("despite");
        hs.add("did");
        hs.add("different");
        hs.add("do");
        hs.add("does");
        hs.add("doing");
        hs.add("done");
        hs.add("down");
        hs.add("downwards");
        hs.add("during");
        hs.add("e");
        hs.add("each");
        hs.add("edu");
        hs.add("eg");
        hs.add("eight");
        hs.add("either");
        hs.add("else");
        hs.add("elsewhere");
        hs.add("enough");
        hs.add("entirely");
        hs.add("especially");
        hs.add("et");
        hs.add("etc");
        hs.add("even");
        hs.add("ever");
        hs.add("every");
        hs.add("everybody");
        hs.add("everyone");
        hs.add("everything");
        hs.add("everywhere");
        hs.add("ex");
        hs.add("exactly");
        hs.add("queryexpansion");
        hs.add("except");
        hs.add("f");
        hs.add("far");
        hs.add("few");
        hs.add("fifth");
        hs.add("first");
        hs.add("five");
        hs.add("followed");
        hs.add("following");
        hs.add("follows");
        hs.add("for");
        hs.add("former");
        hs.add("formerly");
        hs.add("forth");
        hs.add("four");
        hs.add("from");
        hs.add("further");
        hs.add("furthermore");
        hs.add("g");
        hs.add("get");
        hs.add("gets");
        hs.add("getting");
        hs.add("given");
        hs.add("gives");
        hs.add("go");
        hs.add("goes");
        hs.add("going");
        hs.add("gone");
        hs.add("got");
        hs.add("gotten");
        hs.add("greetings");
        hs.add("h");
        hs.add("had");
        hs.add("happens");
        hs.add("hardly");
        hs.add("has");
        hs.add("have");
        hs.add("having");
        hs.add("he");
        hs.add("hello");
        hs.add("help");
        hs.add("hence");
        hs.add("her");
        hs.add("here");
        hs.add("hereafter");
        hs.add("hereby");
        hs.add("herein");
        hs.add("hereupon");
        hs.add("hers");
        hs.add("herself");
        hs.add("hi");
        hs.add("him");
        hs.add("himself");
        hs.add("his");
        hs.add("hither");
        hs.add("hopefully");
        hs.add("how");
        hs.add("howbeit");
        hs.add("however");
        hs.add("i");
        hs.add("ie");
        hs.add("if");
        hs.add("ignored");
        hs.add("immediate");
        hs.add("in");
        hs.add("inasmuch");
        hs.add("inc");
        hs.add("indeed");
        hs.add("indicate");
        hs.add("indicated");
        hs.add("indicates");
        hs.add("inner");
        hs.add("insofar");
        hs.add("instead");
        hs.add("into");
        hs.add("inward");
        hs.add("is");
        hs.add("it");
        hs.add("its");
        hs.add("itself");
        hs.add("j");
        hs.add("just");
        hs.add("k");
        hs.add("keep");
        hs.add("keeps");
        hs.add("kept");
        hs.add("know");
        hs.add("knows");
        hs.add("known");
        hs.add("l");
        hs.add("last");
        hs.add("lately");
        hs.add("later");
        hs.add("latter");
        hs.add("latterly");
        hs.add("least");
        hs.add("less");
        hs.add("lest");
        hs.add("let");
        hs.add("like");
        hs.add("liked");
        hs.add("likely");
        hs.add("little");
        hs.add("you'll");
        hs.add("i'll"); //hs.added to avoid words like you'll,I'll etc.
        hs.add("look");
        hs.add("looking");
        hs.add("looks");
        hs.add("ltd");
        hs.add("m");
        hs.add("mainly");
        hs.add("many");
        hs.add("may");
        hs.add("maybe");
        hs.add("me");
        hs.add("mean");
        hs.add("meanwhile");
        hs.add("merely");
        hs.add("might");
        hs.add("more");
        hs.add("moreover");
        hs.add("most");
        hs.add("mostly");
        hs.add("much");
        hs.add("must");
        hs.add("my");
        hs.add("myself");
        hs.add("n");
        hs.add("name");
        hs.add("namely");
        hs.add("nd");
        hs.add("near");
        hs.add("nearly");
        hs.add("necessary");
        hs.add("need");
        hs.add("needs");
        hs.add("neither");
        hs.add("never");
        hs.add("nevertheless");
        hs.add("new");
        hs.add("next");
        hs.add("nine");
        hs.add("no");
        hs.add("nobody");
        hs.add("non");
        hs.add("none");
        hs.add("noone");
        hs.add("nor");
        hs.add("normally");
        hs.add("not");
        hs.add("nothing");
        hs.add("novel");
        hs.add("now");
        hs.add("nowhere");
        hs.add("o");
        hs.add("obviously");
        hs.add("of");
        hs.add("off");
        hs.add("often");
        hs.add("oh");
        hs.add("ok");
        hs.add("okay");
        hs.add("old");
        hs.add("on");
        hs.add("once");
        hs.add("one");
        hs.add("ones");
        hs.add("only");
        hs.add("onto");
        hs.add("or");
        hs.add("other");
        hs.add("others");
        hs.add("otherwise");
        hs.add("ought");
        hs.add("our");
        hs.add("ours");
        hs.add("ourselves");
        hs.add("out");
        hs.add("outside");
        hs.add("over");
        hs.add("overall");
        hs.add("own");
        hs.add("p");
        hs.add("particular");
        hs.add("particularly");
        hs.add("per");
        hs.add("perhaps");
        hs.add("placed");
        hs.add("please");
        hs.add("plus");
        hs.add("possible");
        hs.add("presumably");
        hs.add("probably");
        hs.add("provides");
        hs.add("q");
        hs.add("que");
        hs.add("quite");
        hs.add("qv");
        hs.add("r");
        hs.add("rather");
        hs.add("rd");
        hs.add("re");
        hs.add("really");
        hs.add("reasonably");
        hs.add("regarding");
        hs.add("regardless");
        hs.add("regards");
        hs.add("relatively");
        hs.add("respectively");
        hs.add("right");
        hs.add("s");
        hs.add("said");
        hs.add("same");
        hs.add("saw");
        hs.add("say");
        hs.add("saying");
        hs.add("says");
        hs.add("second");
        hs.add("secondly");
        hs.add("see");
        hs.add("seeing");
        hs.add("seem");
        hs.add("seemed");
        hs.add("seeming");
        hs.add("seems");
        hs.add("seen");
        hs.add("self");
        hs.add("selves");
        hs.add("sensible");
        hs.add("sent");
        hs.add("serious");
        hs.add("seriously");
        hs.add("seven");
        hs.add("several");
        hs.add("shall");
        hs.add("she");
        hs.add("should");
        hs.add("since");
        hs.add("six");
        hs.add("so");
        hs.add("some");
        hs.add("somebody");
        hs.add("somehow");
        hs.add("someone");
        hs.add("something");
        hs.add("sometime");
        hs.add("sometimes");
        hs.add("somewhat");
        hs.add("somewhere");
        hs.add("soon");
        hs.add("sorry");
        hs.add("specified");
        hs.add("specify");
        hs.add("specifying");
        hs.add("still");
        hs.add("sub");
        hs.add("such");
        hs.add("sup");
        hs.add("sure");
        hs.add("t");
        hs.add("take");
        hs.add("taken");
        hs.add("tell");
        hs.add("tends");
        hs.add("th");
        hs.add("than");
        hs.add("thank");
        hs.add("thanks");
        hs.add("thanx");
        hs.add("that");
        hs.add("thats");
        hs.add("the");
        hs.add("their");
        hs.add("theirs");
        hs.add("them");
        hs.add("themselves");
        hs.add("then");
        hs.add("thence");
        hs.add("there");
        hs.add("thereafter");
        hs.add("thereby");
        hs.add("therefore");
        hs.add("therein");
        hs.add("theres");
        hs.add("thereupon");
        hs.add("these");
        hs.add("they");
        hs.add("think");
        hs.add("third");
        hs.add("this");
        hs.add("thorough");
        hs.add("thoroughly");
        hs.add("those");
        hs.add("though");
        hs.add("three");
        hs.add("through");
        hs.add("throughout");
        hs.add("thru");
        hs.add("thus");
        hs.add("to");
        hs.add("together");
        hs.add("too");
        hs.add("took");
        hs.add("toward");
        hs.add("towards");
        hs.add("tried");
        hs.add("tries");
        hs.add("truly");
        hs.add("try");
        hs.add("trying");
        hs.add("twice");
        hs.add("two");
        hs.add("u");
        hs.add("un");
        hs.add("under");
        hs.add("unfortunately");
        hs.add("unless");
        hs.add("unlikely");
        hs.add("until");
        hs.add("unto");
        hs.add("up");
        hs.add("upon");
        hs.add("us");
        hs.add("use");
        hs.add("used");
        hs.add("useful");
        hs.add("uses");
        hs.add("using");
        hs.add("usually");
        hs.add("uucp");
        hs.add("v");
        hs.add("value");
        hs.add("various");
        hs.add("you've");
        hs.add("i've"); //hs.added to avoid words like I've,you've etc.
        hs.add("very");
        hs.add("via");
        hs.add("viz");
        hs.add("vs");
        hs.add("w");
        hs.add("want");
        hs.add("wants");
        hs.add("was");
        hs.add("way");
        hs.add("we");
        hs.add("welcome");
        hs.add("well");
        hs.add("went");
        hs.add("were");
        hs.add("what");
        hs.add("whatever");
        hs.add("when");
        hs.add("whence");hs.add("whenever");hs.add("where");hs.add("whereafter");hs.add("whereas");hs.add("whereby");hs.add("wherein");hs.add("whereupon");hs.add("wherever");hs.add("whether");hs.add("which");hs.add("while");hs.add("whither");hs.add("who");hs.add("whoever");hs.add("whole");hs.add("whom");hs.add("whose");hs.add("why");hs.add("will");hs.add("willing");hs.add("wish");hs.add("with");hs.add("within");hs.add("without");hs.add("wonder");hs.add("would");hs.add("would");hs.add("x");hs.add("y");hs.add("yes");hs.add("yet");hs.add("you");hs.add("your");hs.add("yours");hs.add("yourself");hs.add("yourselves");hs.add("z");hs.add("zero");
        Iterator<String> itr = str.iterator();
        while (itr.hasNext())
        {
            String it = itr.next();
            if(hs.contains(new String(it)))
            {
                itr.remove();
            }
        }

        return str;
    }
}
